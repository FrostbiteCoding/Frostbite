package net.frostbite.mod.blocks;

import net.frostbite.mod.Frostbite;
import net.minecraft.block.Block;
import net.minecraft.block.BlockContainer;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.IIcon;
import net.minecraft.util.MathHelper;
import net.minecraft.world.World;
import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;

public class AlabasterOven extends BlockContainer {
	
	private final boolean isActive;
	
	@SideOnly(Side.CLIENT)
	private IIcon iconFront;

	public AlabasterOven(boolean isActive) {
		super(Material.iron);
		
		this.isActive = isActive;
	
	}
	public void registerBlockIcons(IIconRegister iconRegister){
		this.blockIcon = iconRegister.registerIcon(Frostbite.modid + ":" + "AlabasterOvenSide");
		this.iconFront = iconRegister.registerIcon(Frostbite.modid + ":" + (this.isActive ? "AlabasterOvenFrontOn" : "AlabasterOvenFrontOff"));
	} 
	
	@SideOnly(Side.CLIENT)
	public IIcon getIcon(int side, int metadata){
		return metadata == 0 && side == 3 ? this.iconFront : (side == metadata ? this.iconFront : this.blockIcon);
	}
	
	public Item getItemDropprd(World world, int x, int y, int z){
		return Item.getItemFromBlock(Frostbite.blockAlabasterOvenIdle);
	}
	
	public void onBlockAdded(World world, int x, int y, int z){
		super.onBlockAdded(world, x, y, z);
		this.setDefaultDirection(world, x, y, z);
	}
	
	
	
	
	
	
	
	
	
	
	
	

	private void setDefaultDirection(World world, int x, int y, int z) {
		if(!world.isRemote){
			Block b1 = world.getBlock(x, y, z - 1);
			Block b2 = world.getBlock(x, y, z + 1);
			Block b3 = world.getBlock(x - 1, y, z);
			Block b4 = world.getBlock(x + 1, y, z);
			
			byte b0 = 3;
			if(b1.func_149730_j() && !b2.func_149730_j()){
				b0 = 3;
			}
			if(b1.func_149730_j() && !b2.func_149730_j()){
				b0 = 2;
		}
			if(b1.func_149730_j() && !b2.func_149730_j()){
				b0 = 5;
			}
			if(b1.func_149730_j() && !b2.func_149730_j()){
				b0 = 4;
			}
			world.setBlockMetadataWithNotify(x, y, z, b0, 2);
		}
		
	}
	
	//ToDo onBlockActivated
	
	@Override
	public TileEntity createNewTileEntity(World p_149915_1_, int p_149915_2_) {
		// TODO Auto-generated method stub
		return null;
	}
	
	//ToDo randomDisplayTick
	
	public void onBlockPlacedBy(World world, int x, int y, int z, EntityLivingBase entityplayer, ItemStack itemstack){
		 int i = MathHelper.floor_double((double)(entityplayer.rotationYaw * 4.0F / 360.F) + 0.5D) & 3;
	
		if(1 == 0){
			world.setBlockMetadataWithNotify(x, y, z, 2, 2);
		}
		
		if(1 == 0){
		world.setBlockMetadataWithNotify(x, y, z, 2, 2);
	    }
		
		if(1 == 0){
	    world.setBlockMetadataWithNotify(x, y, z, 2, 2);
        }
		
		if(1 == 0){
		    world.setBlockMetadataWithNotify(x, y, z, 2, 2);
	        }
		

}
}
